{"ast":null,"code":"var _jsxFileName = \"/Users/shagunlamba/Desktop/social-media/client/src/pages/UploadPosts/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport UserNavbar from '../../components/Navbar/UserNavbar';\nimport classes from './Upload.module.css';\nimport Footer from '../../components/Footer/Footer';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport BASE_URL from '../../config';\nimport { useHistory } from 'react-router-dom';\nimport ReactFileReader from 'react-file-reader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState([]);\n  const [fileName, setFileName] = useState('');\n\n  const handleFiles = files => {\n    console.log(files);\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      console.log(reader.result);\n      setImage(reader.result);\n      const nameOfTheFile = files[0].name;\n      setFileName(nameOfTheFile);\n    };\n\n    reader.readAsText(files[0]);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", image[0]);\n    formData.append(\"upload_preset\", \"w9wt7bfe\");\n    return axios({\n      method: 'post',\n      url: 'https://api.cloudinary.com/v1_1/du7o5hpad/image/upload',\n      data: formData\n    }).then(response => {\n      const fileName = response.data.public_id;\n      const localStr = JSON.parse(localStorage.getItem('user-info'));\n      return axios({\n        method: 'post',\n        url: `${BASE_URL}/upload`,\n        data: {\n          title: title,\n          description: description,\n          image: fileName,\n          author: localStr.username\n        }\n      });\n    }).then(response => {\n      console.log(\"db\", response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNavbar, {\n      iconName: \"upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.upload,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.uploadForm,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create a post!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            onSubmitHandler(e).then(setInterval(() => {\n              history.push(\"/feed\");\n            }, 3000));\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: classes.formLabel,\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"title\",\n              placeholder: \"Title..\",\n              className: \"shadow-none\",\n              value: title,\n              onChange: e => {\n                setTitle(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: classes.formLabel,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"description\",\n              placeholder: \"Description..\",\n              className: \"shadow-none\",\n              value: description,\n              onChange: e => {\n                setDescription(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => {\n              console.log(\"e files\", e.target.files);\n              setImage(e.target.files);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ReactFileReader, {\n            handleFiles: handleFiles,\n            fileTypes: ['.jpg', '.png', '.jpeg'],\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"px-4 mt-4 mb-1 shadow-none\",\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: classes[\"square_btn\"],\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"r5ByyEJ6Ba1rGEcc68U7NUWOtHw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/shagunlamba/Desktop/social-media/client/src/pages/UploadPosts/Upload.js"],"names":["React","useState","UserNavbar","classes","Footer","Form","Button","axios","BASE_URL","useHistory","ReactFileReader","Upload","history","title","setTitle","description","setDescription","image","setImage","fileName","setFileName","handleFiles","files","console","log","reader","FileReader","onload","e","result","nameOfTheFile","name","readAsText","onSubmitHandler","preventDefault","formData","FormData","append","method","url","data","then","response","public_id","localStr","JSON","parse","localStorage","getItem","author","username","upload","uploadForm","setInterval","push","formLabel","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport UserNavbar from '../../components/Navbar/UserNavbar';\nimport classes from './Upload.module.css';\nimport Footer from '../../components/Footer/Footer';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport BASE_URL from '../../config';\nimport { useHistory } from 'react-router-dom';\nimport ReactFileReader from 'react-file-reader';\n\n\nconst Upload = () => {\n\n    const history = useHistory();\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState([]);\n    const [fileName, setFileName] = useState('');\n\n\n    const handleFiles = files => {\n        console.log(files);\n        var reader = new FileReader();\n        reader.onload = function(e) {\n                console.log(reader.result);\n                setImage(reader.result);\n                const nameOfTheFile= (files[0].name);\n                setFileName(nameOfTheFile);\n        }\n        reader.readAsText(files[0]);\n    }\n\n    const onSubmitHandler= (e)=>{\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append(\"file\",image[0]);\n        formData.append(\"upload_preset\", \"w9wt7bfe\");\n\n        return axios({\n                method: 'post',\n                url: 'https://api.cloudinary.com/v1_1/du7o5hpad/image/upload',\n                data: formData\n        })\n        .then(response => {\n            const fileName = response.data.public_id;\n            const localStr = JSON.parse(localStorage.getItem('user-info'));\n                return axios({\n                    method: 'post',\n                    url: `${BASE_URL}/upload`,\n                    data: {\n                        title: title, \n                        description: description, \n                        image: fileName,\n                        author: localStr.username\n                    }\n                })\n            })\n            .then(response => {\n                console.log(\"db\", response);\n        })\n\n    }   \n\n    return (\n        <div>\n            <UserNavbar iconName=\"upload\" />\n            <div className={classes.upload}>\n            <div className={classes.uploadForm}>\n                <h1>Create a post!</h1>\n\n                <Form onSubmit={(e)=>{\n                    onSubmitHandler(e)\n                    .then(\n                        setInterval(()=>{\n                            history.push(\"/feed\")\n                        },3000)\n                    );\n                }}>\n                    <Form.Group>\n                        <Form.Label \n                        className={classes.formLabel}\n                        >Title</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Title..\"\n                            className=\"shadow-none\"\n                            value={title}\n                            onChange={\n                                (e)=>{\n                                    setTitle(e.target.value);\n                                }\n                            }\n                        />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label \n                        className={classes.formLabel}\n                        >Description</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name=\"description\"\n                            placeholder=\"Description..\"\n                            className=\"shadow-none\"\n                            value={description}\n                            onChange={\n                                (e)=>{\n                                    setDescription(e.target.value);\n                                }\n                            }\n                        />\n                    </Form.Group>\n                    \n                    <input \n                        type=\"file\" \n                        onChange={\n                            (e)=>{\n                                console.log(\"e files\",e.target.files);\n                                setImage(e.target.files);\n                            }\n                        }\n                    />\n\n                    <ReactFileReader handleFiles={handleFiles} fileTypes={['.jpg', '.png', '.jpeg']}>\n                            <Button className=\"px-4 mt-4 mb-1 shadow-none\">Upload Image</Button>\n                    </ReactFileReader>\n                    <p>{fileName}</p>\n\n                    <div className=\"text-center\">\n                        <button type=\"submit\" className={classes[\"square_btn\"]}>Create</button>\n                    </div>\n                </Form>\n            </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\nexport default Upload;"]},"metadata":{},"sourceType":"module"}