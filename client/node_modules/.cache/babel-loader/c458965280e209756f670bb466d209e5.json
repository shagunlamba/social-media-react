{"ast":null,"code":"var _jsxFileName = \"/Users/shagunlamba/Desktop/social-media/client/src/pages/UploadPosts/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport UserNavbar from '../../components/Navbar/UserNavbar';\nimport classes from './Upload.module.css';\nimport Footer from '../../components/Footer/Footer';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport BASE_URL from '../../config';\nimport { useHistory } from 'react-router-dom';\nimport ReactFileReader from 'react-file-reader';\nimport { BsCloudUpload } from 'react-icons/bs';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const history = useHistory();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState([]);\n  const [fileName, setFileName] = useState('');\n  const [fileError, setFileError] = useState('');\n  const [file, setFile] = useState(null);\n\n  const handleFiles = files => {\n    setImage(files);\n    console.log(files);\n    setFile(URL.createObjectURL(files[0]));\n    var reader = new FileReader();\n\n    reader.onload = function (e) {\n      e.preventDefault();\n      const nameOfTheFile = files[0].name;\n      setFileName(nameOfTheFile);\n      setFileError('');\n    };\n\n    reader.readAsText(files[0]);\n  };\n\n  const onSubmitHandler = () => {\n    const formData = new FormData();\n    formData.append(\"file\", image[0]);\n    formData.append(\"upload_preset\", \"w9wt7bfe\");\n    return axios({\n      method: 'post',\n      url: 'https://api.cloudinary.com/v1_1/du7o5hpad/image/upload',\n      data: formData\n    }).then(response => {\n      const fileName = response.data.public_id;\n      const localStr = JSON.parse(localStorage.getItem('user-info'));\n      return axios({\n        method: 'post',\n        url: `${BASE_URL}/upload`,\n        data: {\n          title: title,\n          description: description,\n          image: fileName,\n          author: localStr.username\n        }\n      });\n    }).then(response => {\n      console.log(\"db\", response);\n    });\n  };\n\n  const btnClickHandler = e => {\n    e.preventDefault();\n\n    if (fileName === '') {\n      setFileError('Please select an image to upload!');\n      return;\n    }\n\n    onSubmitHandler().then(swal({\n      title: \"Posted!\",\n      icon: \"success\"\n    }), setInterval(() => {\n      history.push(\"/feed\");\n    }, 2000));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNavbar, {\n      iconName: \"upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.upload,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.uploadForm,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Create a post!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: classes.formLabel,\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"title\",\n                  placeholder: \"Title..\",\n                  className: \"shadow-none\",\n                  value: title,\n                  onChange: e => {\n                    setTitle(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  className: classes.formLabel,\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"description\",\n                  placeholder: \"Description..\",\n                  className: \"shadow-none\",\n                  value: description,\n                  onChange: e => {\n                    setDescription(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(ReactFileReader, {\n                  handleFiles: handleFiles,\n                  fileTypes: ['.jpg', '.png', '.jpeg'],\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: classes.customButton,\n                    onClick: e => e.preventDefault(),\n                    children: [\"Upload Image\", /*#__PURE__*/_jsxDEV(BsCloudUpload, {\n                      style: {\n                        marginLeft: \"5px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mt-1\",\n                  children: fileName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mt-1\",\n                  children: fileError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: btnClickHandler,\n                  className: classes[\"square_btn\"],\n                  children: \"Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Post,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.Image,\n              children: fileName === '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.preview,\n                children: \"A preview of your post!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: file,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.Content,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.title,\n                children: [\" \", title, \" / by @shagun2\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.description,\n                children: [\" \", description, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"s+vhRIcH/cQj9DIe7D9Yn0c8qZY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/shagunlamba/Desktop/social-media/client/src/pages/UploadPosts/Upload.js"],"names":["React","useState","UserNavbar","classes","Footer","Form","Button","Row","Col","axios","BASE_URL","useHistory","ReactFileReader","BsCloudUpload","swal","Upload","history","title","setTitle","description","setDescription","image","setImage","fileName","setFileName","fileError","setFileError","file","setFile","handleFiles","files","console","log","URL","createObjectURL","reader","FileReader","onload","e","preventDefault","nameOfTheFile","name","readAsText","onSubmitHandler","formData","FormData","append","method","url","data","then","response","public_id","localStr","JSON","parse","localStorage","getItem","author","username","btnClickHandler","icon","setInterval","push","upload","uploadForm","formLabel","target","value","customButton","marginLeft","Post","Image","preview","Content"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport UserNavbar from '../../components/Navbar/UserNavbar';\nimport classes from './Upload.module.css';\nimport Footer from '../../components/Footer/Footer';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport BASE_URL from '../../config';\nimport { useHistory } from 'react-router-dom';\nimport ReactFileReader from 'react-file-reader';\nimport { BsCloudUpload } from 'react-icons/bs';\nimport swal from 'sweetalert';\n\n\n\nconst Upload = () => {\n\n    const history = useHistory();\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState([]);\n    const [fileName, setFileName] = useState('');\n    const [fileError, setFileError] = useState('');\n    const [file, setFile] = useState(null);\n\n\n    const handleFiles = files => {\n        setImage(files);\n        console.log(files);\n        setFile(URL.createObjectURL(files[0]));\n        var reader = new FileReader();\n        reader.onload = function(e) {\n                e.preventDefault();\n                const nameOfTheFile= (files[0].name);\n                setFileName(nameOfTheFile);\n                setFileError('');\n        }\n        reader.readAsText(files[0]);\n    }\n\n    const onSubmitHandler= ()=>{\n\n        const formData = new FormData();\n        formData.append(\"file\",image[0]);\n        formData.append(\"upload_preset\", \"w9wt7bfe\");\n\n        return axios({\n                method: 'post',\n                url: 'https://api.cloudinary.com/v1_1/du7o5hpad/image/upload',\n                data: formData\n        })\n        .then(response => {\n            const fileName = response.data.public_id;\n            const localStr = JSON.parse(localStorage.getItem('user-info'));\n                return axios({\n                    method: 'post',\n                    url: `${BASE_URL}/upload`,\n                    data: {\n                        title: title, \n                        description: description, \n                        image: fileName,\n                        author: localStr.username\n                    }\n                })\n            })\n            .then(response => {\n                console.log(\"db\", response);\n        })\n\n    }   \n\n    const btnClickHandler = (e)=>{\n        e.preventDefault();\n\n        if(fileName===''){\n            setFileError('Please select an image to upload!');\n            return;\n        }\n\n        onSubmitHandler()\n        .then(\n            swal({\n                title: \"Posted!\",\n                icon: \"success\",\n              }),\n            setInterval(()=>{\n                history.push(\"/feed\")\n            }, 2000)\n        );\n    }\n\n    return (\n        <div>\n            <UserNavbar iconName=\"upload\" />\n            <div className={classes.upload}>\n            <Row>\n                <Col>\n                <div className={classes.uploadForm}>\n                    <h1>Create a post!</h1>\n\n                    <Form>\n                        <Form.Group>\n                            <Form.Label \n                            className={classes.formLabel}\n                            >Title</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"title\"\n                                placeholder=\"Title..\"\n                                className=\"shadow-none\"\n                                value={title}\n                                onChange={\n                                    (e)=>{\n                                        setTitle(e.target.value);\n                                    }\n                                }\n                            />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label \n                            className={classes.formLabel}\n                            >Description</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"description\"\n                                placeholder=\"Description..\"\n                                className=\"shadow-none\"\n                                value={description}\n                                onChange={\n                                    (e)=>{\n                                        setDescription(e.target.value);\n                                    }\n                                }\n                            />\n                        </Form.Group>\n                        \n                        <div className=\"text-center\">\n                            <ReactFileReader handleFiles={handleFiles} fileTypes={['.jpg', '.png', '.jpeg']}>\n                                    <button className={classes.customButton} onClick={(e)=> e.preventDefault() }>\n                                        Upload Image\n                                        <BsCloudUpload style={{\n                                            marginLeft: \"5px\"\n                                        }}/>\n                                    </button>\n                            </ReactFileReader>\n                            <p className=\"mt-1\">{fileName}</p>\n                            <p className=\"mt-1\">{fileError}</p>\n                    \n                            <button onClick={btnClickHandler} className={classes[\"square_btn\"]}>Create</button>\n                        </div>\n\n                    </Form>\n                </div>\n                </Col>\n\n                <Col>\n               \n                        <div className={classes.Post}>\n                                    <div className={classes.Image}>\n                                        {\n                                            fileName===''?\n                                            <div className={classes.preview}>\n                                                A preview of your post!\n                                            </div>:\n                                            <img src={file} alt=\"\" />\n                                        }\n                                    </div>\n                                    <div className={classes.Content}>\n                                        <div className={classes.title}> {title} / by @shagun2</div>\n                                        <div className={classes.description}> {description} </div>\n                                    </div>\n                        </div>\n                </Col>\n\n            </Row>\n            </div>\n            <Footer />\n        </div>\n    )\n}\nexport default Upload;"]},"metadata":{},"sourceType":"module"}