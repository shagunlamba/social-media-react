{"ast":null,"code":"var _jsxFileName = \"/Users/shagunlamba/Desktop/social-media/client/src/pages/UploadPosts/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport UserNavbar from '../../components/Navbar/UserNavbar';\nimport classes from './Upload.module.css';\nimport Footer from '../../components/Footer/Footer';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport BASE_URL from '../../config';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [image, setImage] = useState([]);\n  const history = useHistory();\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", image[0]);\n    formData.append(\"upload_preset\", \"w9wt7bfe\"); // axios.post(\"https://api.cloudinary.com/v1_1/du7o5hpad/image/upload\", formData)\n    // .then((response)=>{\n    //     console.log(\"Cloudinary\",response);\n    //     const fileName = response.data.public_id;\n    //     const localStr = JSON.parse(localStorage.getItem('user-info'));\n    //     axios.post(`${BASE_URL}/upload`,{   \n    //         title: title, \n    //         description: description, \n    //         image: fileName,\n    //         author: localStr.username\n    //     })\n    //     .then((res)=>{\n    //         console.log(\"Axios db\",res);\n    //         history.push('/feed');\n    //     })\n    //     .catch((err)=>{\n    //         console.log(err);\n    //     })\n    // })\n    // .catch((err)=>{\n    //     console.log(err);\n    // })\n\n    return axios({\n      method: 'post',\n      url: 'https://api.cloudinary.com/v1_1/du7o5hpad/image/upload',\n      data: formData\n    }).then(response => {\n      const fileName = response.data.public_id;\n      const localStr = JSON.parse(localStorage.getItem('user-info'));\n      return axios({\n        method: 'post',\n        url: `${BASE_URL}/upload`,\n        data: {\n          title: title,\n          description: description,\n          image: fileName,\n          author: localStr.username\n        }\n      });\n    }).then(response => {\n      console.log(\"db\", response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(UserNavbar, {\n      iconName: \"upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.upload,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.uploadForm,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create a post!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => {\n            onSubmitHandler(e).then(setInterval(() => {\n              history.push(\"/feed\");\n            }, 3000));\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: classes.formLabel,\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"title\",\n              placeholder: \"Title..\",\n              className: \"shadow-none\",\n              value: title,\n              onChange: e => {\n                setTitle(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: classes.formLabel,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"description\",\n              placeholder: \"Description..\",\n              className: \"shadow-none\",\n              value: description,\n              onChange: e => {\n                setDescription(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => {\n              setImage(e.target.files);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: classes[\"square_btn\"],\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"WNisCBQSnRX13CMPZELsmUKYv6w=\", false, function () {\n  return [useHistory];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/shagunlamba/Desktop/social-media/client/src/pages/UploadPosts/Upload.js"],"names":["React","useState","UserNavbar","classes","Footer","Form","Row","Col","axios","BASE_URL","useHistory","Upload","title","setTitle","description","setDescription","image","setImage","history","onSubmitHandler","e","preventDefault","formData","FormData","append","method","url","data","then","response","fileName","public_id","localStr","JSON","parse","localStorage","getItem","author","username","console","log","upload","uploadForm","setInterval","push","formLabel","target","value","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport UserNavbar from '../../components/Navbar/UserNavbar';\nimport classes from './Upload.module.css';\nimport Footer from '../../components/Footer/Footer';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport BASE_URL from '../../config';\nimport { useHistory } from 'react-router-dom';\n\nconst Upload = () => {\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [image, setImage] = useState([]);\n    const history = useHistory();\n\n    const onSubmitHandler= (e)=>{\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.append(\"file\",image[0]);\n        formData.append(\"upload_preset\", \"w9wt7bfe\");\n\n        // axios.post(\"https://api.cloudinary.com/v1_1/du7o5hpad/image/upload\", formData)\n        // .then((response)=>{\n        //     console.log(\"Cloudinary\",response);\n        //     const fileName = response.data.public_id;\n        //     const localStr = JSON.parse(localStorage.getItem('user-info'));\n        //     axios.post(`${BASE_URL}/upload`,{   \n        //         title: title, \n        //         description: description, \n        //         image: fileName,\n        //         author: localStr.username\n        //     })\n        //     .then((res)=>{\n        //         console.log(\"Axios db\",res);\n        //         history.push('/feed');\n        //     })\n        //     .catch((err)=>{\n        //         console.log(err);\n        //     })\n        // })\n        // .catch((err)=>{\n        //     console.log(err);\n        // })\n\n        return axios({\n                method: 'post',\n                url: 'https://api.cloudinary.com/v1_1/du7o5hpad/image/upload',\n                data: formData\n        })\n        .then(response => {\n            const fileName = response.data.public_id;\n            const localStr = JSON.parse(localStorage.getItem('user-info'));\n                return axios({\n                    method: 'post',\n                    url: `${BASE_URL}/upload`,\n                    data: {\n                        title: title, \n                        description: description, \n                        image: fileName,\n                        author: localStr.username\n                    }\n                })\n            })\n            .then(response => {\n                console.log(\"db\", response);\n        })\n\n    }   \n\n    return (\n        <div>\n            <UserNavbar iconName=\"upload\" />\n            <div className={classes.upload}>\n            <div className={classes.uploadForm}>\n                <h1>Create a post!</h1>\n\n                <Form onSubmit={(e)=>{\n                    onSubmitHandler(e)\n                    .then(\n                        setInterval(()=>{\n                            history.push(\"/feed\")\n                        },3000)\n                    );\n                }}>\n                    <Form.Group>\n                        <Form.Label \n                        className={classes.formLabel}\n                        >Title</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name=\"title\"\n                            placeholder=\"Title..\"\n                            className=\"shadow-none\"\n                            value={title}\n                            onChange={\n                                (e)=>{\n                                    setTitle(e.target.value);\n                                }\n                            }\n                        />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label \n                        className={classes.formLabel}\n                        >Description</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            name=\"description\"\n                            placeholder=\"Description..\"\n                            className=\"shadow-none\"\n                            value={description}\n                            onChange={\n                                (e)=>{\n                                    setDescription(e.target.value);\n                                }\n                            }\n                        />\n                    </Form.Group>\n                    \n                    <input \n                        type=\"file\" \n                        onChange={\n                            (e)=>{\n                                setImage(e.target.files);\n                            }\n                        }\n                    />\n\n                    <div className=\"text-center\">\n                        <button type=\"submit\" className={classes[\"square_btn\"]}>Create</button>\n                    </div>\n                </Form>\n            </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\nexport default Upload;"]},"metadata":{},"sourceType":"module"}